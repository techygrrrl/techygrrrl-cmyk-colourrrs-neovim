local colors = {
	-- PATCH_OPEN
	Normal = { fg = "#E0DDE5", bg = "#221B32" },
	BufferLineBuffer = { link = "Normal" },
	BufferLineCloseButton = { link = "Normal" },
	Cursor = { link = "Normal" },
	typescriptGlobal = { link = "Normal" },
	typescriptObjectType = { link = "Normal" },
	typescriptPredefinedType = { link = "Normal" },
	Boolean = { fg = "#EF15BF" },
	BufferLineBackground = { bg = "#221B32" },
	BufferLineGroupSeparator = { link = "BufferLineBackground" },
	BufferLineIndicatorVisible = { link = "BufferLineBackground" },
	BufferLineModifiedSelected = { link = "BufferLineBackground" },
	BufferLineModifiedVisible = { link = "BufferLineBackground" },
	BufferLineOffsetSeparator = { link = "BufferLineBackground" },
	BufferLineSeparator = { link = "BufferLineBackground" },
	BufferLineTab = { link = "BufferLineBackground" },
	BufferLineTabClose = { link = "BufferLineBackground" },
	BufferLineTabSeparator = { link = "BufferLineBackground" },
	BufferLineTabSeparatorSelected = { link = "BufferLineBackground" },
	BufferLineBufferVisible = { link = "BufferLineBuffer" },
	BufferLineBufferSelected = { fg = "#E0DDE5", bg = "#221B32", bold = true, italic = true },
	BufferLineCloseButtonSelected = { link = "BufferLineCloseButton" },
	BufferLineCloseButtonVisible = { link = "BufferLineCloseButton" },
	BufferLineFill = { bg = "#130E0F" },
	Builtin = { fg = "#E0DDE5" },
	CMYKBackstick = { link = "CMYKQuote" },
	Character = { fg = "#B596F8" },
	Comment = { fg = "#807694", italic = true },
	jsonCommentError = { link = "Comment" },
	Conditional = { fg = "#EF15BF" },
	Constant = { fg = "#E0DDE5" },
	Constructor = { fg = "#15AEEF" },
	CursorLine = { bg = "#2B223F" },
	CursorColumn = { link = "CursorLine" },
	CursorLineNr = { fg = "#EF15BF", bg = "#130E0F" },
	Directory = { fg = "#B596F8" },
	EndOfBuffer = { fg = "#221B32" },
	Error = { fg = "#f00000" },
	Exception = { fg = "#EF15BF" },
	Field = { fg = "#E0DDE5" },
	Float = { fg = "#EF9815" },
	Function = { fg = "#15EFAE" },
	typescriptFuncCall = { link = "Function" },
	typescriptIdentifierName = { link = "Function" },
	typescriptMember = { link = "Function" },
	Identifier = { fg = "#EF15BF" },
	typescriptImport = { link = "Identifier" },
	IncSearch = { fg = "#E0DDE5", bg = "#7515EF", bold = true },
	Include = { fg = "#EF15BF" },
	Keyword = { fg = "#15AEEF" },
	typescriptAliasDeclaration = { link = "Keyword" },
	typescriptClassName = { link = "Keyword" },
	typescriptEnum = { link = "Keyword" },
	typescriptEnumKeyword = { link = "Keyword" },
	typescriptInterfaceName = { link = "Keyword" },
	typescriptTypeReference = { link = "Keyword" },
	typescriptVariable = { link = "Keyword" },
	KeywordOperator = { fg = "#B596F8" },
	KeywordReturn = { fg = "#EF15BF" },
	LineNr = { fg = "#E0DDE5", bg = "#130E0F" },
	Macro = { fg = "#EF15BF" },
	MatchParen = { fg = "#D5D2DC", bg = "#463767" },
	Menu = { fg = "#E0DDE5", bg = "#221B32" },
	Method = { fg = "#15EFAE" },
	ModeMsg = { fg = "#E0DDE5", bg = "#221B32" },
	Number = { fg = "#EF9815" },
	Operator = { fg = "#B596F8" },
	Pmenu = { fg = "#EF15BF", bg = "#382C51" },
	PmenuSBar = { bg = "#463767" },
	PmenuSel = { fg = "#EF15BF", bg = "#302546" },
	PmenuThumb = { bg = "#302546" },
	Prepoc = { fg = "#EF15BF" },
	Repeat = { fg = "#EF15BF" },
	Search = { fg = "#E0DDE5", bg = "#7515EF", bold = true },
	SignColumn = { bg = "#130E0F" },
	SignColumnSB = { bg = "#130E0F" },
	Statement = { fg = "#EF15BF" },
	String = { fg = "#B596F8" },
	jsonString = { link = "String" },
	typescriptString = { link = "String" },
	typescriptTemplate = { link = "String" },
	StringRegex = { fg = "#EF15BF" },
	TSAttribute = { fg = "#EBEF15" },
	TSCharacter = { fg = "#B596F8" },
	TSComment = { fg = "#807694" },
	TSConditional = { fg = "#EF15BF" },
	TSConstBuiltin = { fg = "#EF15BF" },
	TSConstMacro = { fg = "#EF15BF" },
	TSConstant = { fg = "#E0DDE5" },
	TSConstructor = { fg = "#15AEEF" },
	TSEmphasis = { fg = "#E0DDE5", italic = true },
	TSError = { fg = "#f00000" },
	TSException = { fg = "#EF15BF" },
	TSField = { fg = "#E0DDE5" },
	TSFloat = { fg = "#EF9815" },
	TSFuncBuiltin = { fg = "#E0DDE5" },
	TSFuncMacro = { fg = "#15EFAE" },
	TSFunction = { fg = "#15EFAE" },
	TSInclude = { fg = "#EF15BF" },
	TSKeyword = { fg = "#15AEEF" },
	TSKeywordFunction = { fg = "#15AEEF" },
	TSKeywordOperator = { fg = "#B596F8" },
	TSKeywordReturn = { fg = "#EF15BF" },
	TSLabel = { fg = "#7515EF" },
	TSLiteral = { fg = "#E0DDE5" },
	TSMethod = { fg = "#15EFAE" },
	TSNamespace = { fg = "#EF15BF" },
	TSNumber = { fg = "#EF9815" },
	TSOperator = { fg = "#B596F8" },
	TSParameter = {},
	TSParameterReference = {},
	TSProperty = { fg = "#E0DDE5" },
	TSPunctBracket = { fg = "#EBEF15" },
	CMYKQuote = { link = "TSPunctBracket" },
	TSPunctDelimiter = { fg = "#EBEF15" },
	TSPunctSpecial = { fg = "#EBEF15" },
	TSRepeat = { fg = "#EF15BF" },
	TSStatement = { fg = "#f00000" },
	TSString = { fg = "#B596F8" },
	TSStringEscape = { fg = "#EF15BF" },
	TSStringRegex = { fg = "#EF15BF" },
	TSStrong = { fg = "#E0DDE5", bold = true },
	TSTag = { fg = "#EF15BF" },
	TSTagDelimiter = { fg = "#EBEF15" },
	TSText = { fg = "#E0DDE5" },
	TSTextReference = { fg = "#E0DDE5" },
	TSTitle = {},
	TSType = { fg = "#15AEEF" },
	TSTypeBuiltin = { fg = "#E0DDE5" },
	TSURI = { fg = "#E0DDE5", underline = true },
	TSVariable = { fg = "#E0DDE5" },
	TSVariableBuiltin = { fg = "#E0DDE5" },
	Title = {},
	Todo = { fg = "#E0DDE5", bg = "#EF15BF", bold = true },
	TSTodo = { link = "Todo" },
	Type = { fg = "#15AEEF" },
	TypeBuiltin = { fg = "#E0DDE5" },
	Variable = { fg = "#E0DDE5" },
	typescriptVariableDeclaration = { link = "Variable" },
	Visual = { bg = "#878292" },
	Warn = { fg = "#EF9815" },
	jsonFold = { fg = "#EF15BF" },
	jsonKeyword = { fg = "#15EFAE" },
	jsonKeywordMatch = { fg = "#EBEF15" },
	jsonNoise = { fg = "#EBEF15" },
	jsonQuote = { fg = "#EBEF15" },
	markdownBold = { fg = "#E0DDE5", bold = true },
	markdownCode = { fg = "#E0DDE5" },
	markdownCodeDelimiter = { fg = "#E0DDE5" },
	markdownEscape = { fg = "#E0DDE5" },
	markdownFootnote = { fg = "#E0DDE5" },
	markdownFootnoteDefinition = { fg = "#E0DDE5" },
	markdownHeadingDelimiter = { fg = "#E0DDE5" },
	markdownLinkText = { fg = "#E0DDE5" },
	markdownRule = { fg = "#E0DDE5", bold = true },
	markdownTSLiteral = { fg = "#E0DDE5" },
	markdownUrl = { fg = "#E0DDE5", underline = true },
	markdown_inlineTSLiteral = { fg = "#E0DDE5" },
	typescriptBinaryOp = { fg = "#B596F8" },
	typescriptBraces = { fg = "#EBEF15" },
	typescriptEndColons = { link = "typescriptBraces" },
	typescriptParens = { link = "typescriptBraces" },
	typescriptCall = { fg = "#E0DDE5" },
	typescriptConstructor = { fg = "#15EFAE" },
	typescriptDecorator = { fg = "#15EFAE" },
	typescriptExceptions = { fg = "#EF15BF" },
	typescriptForOperator = { fg = "#B596F8" },
	typescriptFuncComma = { fg = "#EBEF15" },
	typescriptIdentifier = { fg = "#EF15BF" },
	typescriptObjectLabel = { fg = "#E0DDE5" },
	typescriptOperator = { fg = "#B596F8" },
	typescriptProp = { fg = "#EF15BF" },
	typescriptRegexpString = { fg = "#EF15BF" },
	typescriptSpecial = { fg = "#EF15BF" },
	typescriptTernaryOp = { fg = "#B596F8" },
	typescriptTry = { fg = "#EF15BF" },
	-- PATCH_CLOSE
}

vim.cmd([[highlight clear]])
vim.opt.termguicolors = true
vim.g.colors_name = "cmyk-colourrr"

if vim.fn.has("nvim-treesitter") then
	require("nvim-treesitter.highlight").set_custom_captures({
		["CMYKExport"] = "Identifier",
	})
end

for group, attrs in pairs(colors) do
	vim.api.nvim_set_hl(0, group, attrs)
end
